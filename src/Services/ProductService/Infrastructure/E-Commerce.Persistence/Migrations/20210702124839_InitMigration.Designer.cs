// <auto-generated />
using System;
using E_Commerce.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Commerce.Persistence.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20210702124839_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Commerce.Domain.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("EditionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 556925214,
                            Slug = "samsung",
                            Title = "Samsung"
                        },
                        new
                        {
                            Id = 656925224,
                            Slug = "xiaomi",
                            Title = "Xiaomi"
                        },
                        new
                        {
                            Id = 756925234,
                            Slug = "apple",
                            Title = "Apple"
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editions");

                    b.HasData(
                        new
                        {
                            Id = 256925214,
                            Title = "32 GB"
                        },
                        new
                        {
                            Id = 256925224,
                            Title = "64 GB"
                        },
                        new
                        {
                            Id = 256925234,
                            Title = "128 GB"
                        },
                        new
                        {
                            Id = 256925244,
                            Title = "256 GB"
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CartItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("ProductId");

                    b.HasIndex("CartItemId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 256925260,
                            CreatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 651, DateTimeKind.Local).AddTicks(5557),
                            Description = "Smartphone Pro-Grade Camera 8K Video 12MP High Res, Phantom Black",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/61cjeSE%2BZ-L._AC_SL1000_.jpg",
                            IsDeleted = false,
                            Number = "132697037186527720",
                            Slug = "samsung-galaxy-s21",
                            Title = "SAMSUNG Galaxy S21+",
                            UpdatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 652, DateTimeKind.Local).AddTicks(5803)
                        },
                        new
                        {
                            Id = 256925261,
                            CreatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(648),
                            Description = "Factory Unlocked Android Cell Phone | US Version| Fingerprint ID and Facial Recognition | Long-Lasting...",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/61eCdKZk17L._AC_SL1500_.jpg",
                            IsDeleted = false,
                            Number = "132697037186530660",
                            Slug = "samsung-galaxy-s10",
                            Title = "Samsung Galaxy S10",
                            UpdatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(657)
                        },
                        new
                        {
                            Id = 256925262,
                            CreatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(688),
                            Description = "RAM Kapasitesi 4 GB | RAM Ön Kamera 12 MP",
                            Image = "https://productimages.hepsiburada.net/s/76/550/110000018213462.jpg",
                            IsDeleted = false,
                            Number = "132697037186530692",
                            Slug = "iphone-12",
                            Title = "IPhone 12",
                            UpdatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(690)
                        },
                        new
                        {
                            Id = 256925263,
                            CreatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(820),
                            Description = "RAM Kapasitesi 3 GB RAM | Ön Kamera7,0 MP",
                            Image = "https://productimages.hepsiburada.net/s/66/550/110000007422599.jpg",
                            IsDeleted = false,
                            Number = "132697037186530824",
                            Slug = "iphone-se",
                            Title = "IPhone SE",
                            UpdatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(822)
                        },
                        new
                        {
                            Id = 256925264,
                            CreatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(830),
                            Description = "Ekran Boyutu: 6.81 inç İşletim Sistemi: Android 11 Ram: 8 GB Batarya Kapasitesi: 4600 mAH",
                            Image = "https://productimages.hepsiburada.net/s/75/550/110000017452930.jpg",
                            IsDeleted = false,
                            Number = "132697037186530833",
                            Slug = "xiaomi-mi-11",
                            Title = "Xiaomi Mi 11",
                            UpdatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(831)
                        },
                        new
                        {
                            Id = 256925265,
                            CreatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(837),
                            Description = "128GB 4GB RAM | GSM LTE Factory Unlocked Smartphone | International Model (Onyx Gray)",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/51hIPZc5OjL._AC_SL1000_.jpg",
                            IsDeleted = false,
                            Number = "132697037186530840",
                            Slug = "xiaomi-redmi-note-10",
                            Title = "Xiaomi Redmi Note 10",
                            UpdatedDate = new DateTime(2021, 7, 2, 15, 48, 38, 653, DateTimeKind.Local).AddTicks(839)
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id", "ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 156925211,
                            ProductId = 256925260,
                            CategoryId = 556925214
                        },
                        new
                        {
                            Id = 156925212,
                            ProductId = 256925261,
                            CategoryId = 556925214
                        },
                        new
                        {
                            Id = 156925213,
                            ProductId = 256925262,
                            CategoryId = 656925224
                        },
                        new
                        {
                            Id = 156925214,
                            ProductId = 256925263,
                            CategoryId = 656925224
                        },
                        new
                        {
                            Id = 156925215,
                            ProductId = 256925264,
                            CategoryId = 756925234
                        },
                        new
                        {
                            Id = 156925216,
                            ProductId = 256925265,
                            CategoryId = 756925234
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("EditionId")
                        .HasColumnType("int");

                    b.Property<int?>("CartItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id", "ProductId", "EditionId");

                    b.HasIndex("CartItemId");

                    b.HasIndex("EditionId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrices");

                    b.HasData(
                        new
                        {
                            Id = 156925211,
                            ProductId = 256925260,
                            EditionId = 256925214,
                            Price = 770.45m
                        },
                        new
                        {
                            Id = 156925212,
                            ProductId = 256925260,
                            EditionId = 256925224,
                            Price = 1770.45m
                        },
                        new
                        {
                            Id = 156925213,
                            ProductId = 256925260,
                            EditionId = 256925234,
                            Price = 2770.45m
                        },
                        new
                        {
                            Id = 156925213,
                            ProductId = 256925261,
                            EditionId = 256925214,
                            Price = 1060.45m
                        },
                        new
                        {
                            Id = 156925214,
                            ProductId = 256925261,
                            EditionId = 256925224,
                            Price = 2060.45m
                        },
                        new
                        {
                            Id = 156925216,
                            ProductId = 256925261,
                            EditionId = 256925234,
                            Price = 3060.45m
                        },
                        new
                        {
                            Id = 156925217,
                            ProductId = 256925261,
                            EditionId = 256925244,
                            Price = 4060.45m
                        },
                        new
                        {
                            Id = 156925218,
                            ProductId = 256925262,
                            EditionId = 256925214,
                            Price = 1750.45m
                        },
                        new
                        {
                            Id = 156925219,
                            ProductId = 256925262,
                            EditionId = 256925224,
                            Price = 2750.45m
                        },
                        new
                        {
                            Id = 156925220,
                            ProductId = 256925262,
                            EditionId = 256925234,
                            Price = 2950.45m
                        },
                        new
                        {
                            Id = 156925221,
                            ProductId = 256925263,
                            EditionId = 256925214,
                            Price = 3240.45m
                        },
                        new
                        {
                            Id = 156925222,
                            ProductId = 256925263,
                            EditionId = 256925224,
                            Price = 4240.45m
                        },
                        new
                        {
                            Id = 156925223,
                            ProductId = 256925263,
                            EditionId = 256925234,
                            Price = 5240.45m
                        },
                        new
                        {
                            Id = 156925224,
                            ProductId = 256925263,
                            EditionId = 256925244,
                            Price = 6240.45m
                        },
                        new
                        {
                            Id = 156925225,
                            ProductId = 256925264,
                            EditionId = 256925214,
                            Price = 3240.45m
                        },
                        new
                        {
                            Id = 156925226,
                            ProductId = 256925264,
                            EditionId = 256925224,
                            Price = 4240.45m
                        },
                        new
                        {
                            Id = 156925227,
                            ProductId = 256925264,
                            EditionId = 256925234,
                            Price = 5240.45m
                        },
                        new
                        {
                            Id = 156925228,
                            ProductId = 256925264,
                            EditionId = 256925244,
                            Price = 6240.45m
                        },
                        new
                        {
                            Id = 156925229,
                            ProductId = 256925265,
                            EditionId = 256925214,
                            Price = 4240.45m
                        },
                        new
                        {
                            Id = 156925230,
                            ProductId = 256925265,
                            EditionId = 256925224,
                            Price = 5240.45m
                        },
                        new
                        {
                            Id = 156925231,
                            ProductId = 256925265,
                            EditionId = 256925234,
                            Price = 7240.45m
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Product", b =>
                {
                    b.HasOne("E_Commerce.Domain.Entities.CartItem", null)
                        .WithMany("Products")
                        .HasForeignKey("CartItemId");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("E_Commerce.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.Domain.Entities.Product", null)
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.ProductPrice", b =>
                {
                    b.HasOne("E_Commerce.Domain.Entities.CartItem", null)
                        .WithMany("ProductPrices")
                        .HasForeignKey("CartItemId");

                    b.HasOne("E_Commerce.Domain.Entities.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.Domain.Entities.Product", null)
                        .WithMany("ProductPrice")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edition");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.CartItem", b =>
                {
                    b.Navigation("ProductPrices");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductPrice");
                });
#pragma warning restore 612, 618
        }
    }
}
